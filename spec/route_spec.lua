local Route = require 'luxure.route'.Route
local utils = require 'luxure.utils'

describe('Route', function()
    it('can parse query params correctly', function()
        local r = Route.new('/asdf?a=b&c=d')
        assert(r.path == '/asdf', 'Expected /asdf found ' .. (r.path or 'nil'))
        assert(r.query.a == 'b', 'Expected a=b, found ' .. (r.query.a or 'nil'))
        assert(r.query.c == 'd', 'Expected c=d, found ' .. (r.query.c or 'nil'))
    end)
    it('matches parameterized paths', function()
        local r = Route.new('/a/:b')
        assert(r:matches('/a/1'), 'expected a match ' .. utils.table_string(r))
    end)
    it('matches plain paths', function()
        local r = Route.new('/a/b')
        assert(r:matches('/a/b'), 'expected a match ' .. utils.table_string(r))
    end)
    it('parses colon parameters correctly', function()
        local r = Route.new('/a/:b')
        local matches, params = r:matches('a/1')
        assert(matches, 'expected a match: ' .. utils.table_string(r))
        assert(params.b == '1', 'b == 1 ' .. utils.table_string(params))
    end)
end)